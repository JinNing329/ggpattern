% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-magick-fill.R
\name{fill_area_with_img}
\alias{fill_area_with_img}
\title{Fill an area with a magick image}
\usage{
fill_area_with_img(
  img,
  width,
  height,
  type = "squish",
  gravity = "Center",
  filter = "lanczos",
  scale = 1
)
}
\arguments{
\item{img}{magick image}

\item{width, height}{target dimensions for final image}

\item{type}{how to resize the image. 'none', 'fit', 'squish', 'expand' or 'tile'. default: squish}

\item{gravity}{how to anchor the image during the operation. See \code{magick::gravity_types()}}

\item{filter}{default: lanczos}

\item{scale}{scale the source image before tiling. default: 1}
}
\value{
magick image of the required dimensions
}
\description{
Fill an area with a magick image
}
\details{
Support fill types

\itemize{
\item{\code{fit   }}{ - Fill image canvas, preserving aspect, such that one of target width or height is achieved without distoring or cropping.}
\item{\code{squish}}{ - Fill image canvas, ignoring aspect, such that both the target width and height is achieved.}
\item{\code{expand}}{ - Fill image canvas, by scaling image and preserving aspect, such that when cropped, the target width and height is achieved.}
\item{\code{none  }}{ - Fill image canvas canvas to the target width/height, and use gravity to place the undistorted image}
\item{\code{tile  }}{ - Tile the image canvas with image.}
}
}
\examples{
\dontrun{
filename <- system.file("img", "Rlogo.png", package="png")
img <- magick::image_read(filename)
fill_area_with_img(img, 100, 400, type = 'squish')
}
}
